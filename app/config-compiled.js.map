{"version":3,"sources":["config.js"],"names":[],"mappings":";;;AAGA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;AAEA,SAAS,MAAT,GAAkB;AACd,UAAM,IAAN,GAAa,GAAb;;;AAGA,QAAI,cAAc,MAAM,GAAN,CAAU,UAAV,KAAyB,aAA3C;AACA,kBAAY,YAAY,WAAZ,EAAZ;;AAEA,UAAM,IAAN,CAAW,WAAX,EAAwB,EAAC,MAAK,cAAc,WAAd,GAA4B,OAAlC,EAAxB;;AAEA,UAAM,IAAN,CAAW,SAAX,EAAsB,EAAC,MAAK,uBAAN,EAAtB;;;AAGA,UAAM,GAAN,CAAU,KAAV,EAAiB,WAAjB;AACA,UAAM,GAAN,CAAU,KAAV,EAAiB,eAAc,aAA/B;AACH;;;;;;AAMD,OAAO,SAAP,CAAiB,GAAjB,GAAuB,UAAS,GAAT,EAAc;AACjC,WAAO,MAAM,GAAN,CAAU,GAAV,CAAP;AACH,CAFD;;AAIA,OAAO,OAAP,GAAiB,IAAI,MAAJ,EAAjB","file":"config-compiled.js","sourcesContent":["/**\r\n * Set up the configuration handling\r\n */\r\nvar nconf = require('nconf');\r\n\r\nfunction Config() {\r\n    nconf.argv().env();\r\n\r\n    // If NODE_ENV supplied by process, use that. Else, fall back to development\r\n    var environment = nconf.get('NODE_ENV') || 'development';\r\n    environment=environment.toLowerCase();\r\n    // First priority: use the environment-specific settings\r\n    nconf.file(environment, {file:'./config/' + environment + '.json'});\r\n    // Second priority: if no config settings found in arguments or configuration files, fall back to default values\r\n    nconf.file('default', {file:'./config/default.json'});\r\n\r\n    // Set the environment\r\n    nconf.set('env', environment);\r\n    nconf.set('dev', environment =='development');\r\n}\r\n/**\r\n * Load a value from the config by key\r\n * @param key\r\n * @returns {*}\r\n */\r\nConfig.prototype.get = function(key) {\r\n    return nconf.get(key);\r\n};\r\n\r\nmodule.exports = new Config();"]}