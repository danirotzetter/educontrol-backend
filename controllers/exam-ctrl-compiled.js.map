{"version":3,"sources":["exam-ctrl.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,QAAQ,QAAQ,MAAR,EAAZ;AACA,IAAI,SAAS,QAAQ,qBAAR,CAAb;AACA,IAAI,OAAO,QAAQ,mBAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,oBAAR,CAAZ;AACA,MAAM,SAAS,QAAQ,kBAAR,CAAf;;;;;AAMA,MAAM,GAAN,CAAU,GAAV,EAAe,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC/B,SAAK,IAAL,CAAU,EAAV,EAAc,QAAd,CAAuB,EAAC,MAAM,QAAP,EAAiB,UAAU,EAAC,MAAM,SAAP,EAA3B,EAAvB,EAAsE,IAAtE,CAA2E,UAAU,GAAV,EAAe,IAAf,EAAqB;AAC5F,YAAI,GAAJ,EAAS;AACL,mBAAO,IAAI,IAAJ,CAAS,GAAT,EAAc;AACjB,yBAAS;AADQ,aAAd,CAAP;AAGH;AACD,eAAO,IAAI,IAAJ,CAAS,IAAT,CAAP;AACH,KAPD;AAQH,CATD;;;;;AAeA,MAAM,GAAN,CAAU,MAAV,EAAkB,UAAU,GAAV,EAAe,GAAf,EAAoB;AAClC,QAAI,KAAK,IAAI,MAAJ,CAAW,EAApB;AACA,SAAK,OAAL,CAAa,EAAC,KAAK,EAAN,EAAb,EAAwB,QAAxB,CAAiC,EAAC,MAAM,QAAP,EAAiB,UAAU,EAAC,MAAM,SAAP,EAA3B,EAAjC,EAAgF,IAAhF,CAAqF,UAAU,GAAV,EAAe,MAAf,EAAuB;AACxG,YAAI,GAAJ,EAAS;AACL,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH;AACD,YAAI,CAAC,MAAL,EAAa;AACT,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH;AACD,eAAO,IAAI,IAAJ,CAAS,MAAT,CAAP;AACH,KAZD;AAaH,CAfD;;;;;AAqBA,MAAM,IAAN,CAAW,GAAX,EAAgB,UAAU,GAAV,EAAe,GAAf,EAAoB;;AAEhC,QAAI,OAAO,IAAI,IAAJ,CAAS;AAChB,cAAM,IAAI,IAAJ,CAAS,IADC;AAEhB,cAAM,IAAI,IAAJ,CAAS,IAFC;AAGhB,eAAM,IAAI,IAAJ,CAAS;AAHC,KAAT,CAAX;;AAMA,SAAK,IAAL,CAAU,UAAU,GAAV,EAAe,IAAf,EAAqB;AAC3B,YAAI,GAAJ,EAAS;AACL,oBAAQ,GAAR,CAAY,yBAAyB,GAArC;AACA,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS,mBADe;AAExB,uBAAO;AAFiB,aAArB,CAAP;AAIH,SAND,MAOK;AACD,oBAAQ,GAAR,CAAY,+BAA+B,GAA3C;AACA,mBAAO,IAAI,IAAJ,CAAS;AACZ,yBAAS,OADG;AAEZ,qBAAK,OAAO;AAFA,aAAT,CAAP;AAIH;AACJ,KAfD;AAgBH,CAxBD;;AA6BA,OAAO,OAAP,GAAiB,OAAjB","file":"exam-ctrl-compiled.js","sourcesContent":["var express = require('express');\r\nvar exams = express.Router();\r\nvar Course = require('../models/course.js');\r\nvar Exam = require('../models/exam.js');\r\nvar Grade = require('../models/grade.js');\r\nconst config = require('../app/config.js');\r\n\r\n\r\n/**\r\n * List of all exams\r\n */\r\nexams.get('/', function (req, res) {\r\n    Exam.find({}).populate({path: 'grades', populate: {path: 'student'}}).exec(function (err, list) {\r\n        if (err) {\r\n            return res.json(500, {\r\n                message: 'Error getting objects'\r\n            });\r\n        }\r\n        return res.json(list);\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Find user by id\r\n */\r\nexams.get('/:id', function (req, res) {\r\n    var id = req.params.id;\r\n    Exam.findOne({_id: id}).populate({path: 'grades', populate: {path: 'student'}}).exec(function (err, course) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error when getting object'\r\n            });\r\n        }\r\n        if (!course) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        return res.json(course);\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Create new exam\r\n */\r\nexams.post('/', function (req, res) {\r\n    // Exam object\r\n    var exam = new Exam({\r\n        name: req.body.name,\r\n        date: req.body.date,\r\n        exams:req.body.exams\r\n    });\r\n\r\n    Exam.save(function (err, exam) {\r\n        if (err) {\r\n            console.log('Error saving course ' + err);\r\n            return res.status(500).json({\r\n                message: 'Error when saving',\r\n                error: err\r\n            });\r\n        }\r\n        else {\r\n            console.log('Successfully saved course ' + err);\r\n            return res.json({\r\n                message: 'saved',\r\n                _id: course._id\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\nmodule.exports = courses;"]}