{"version":3,"sources":["user-ctrl.js"],"names":[],"mappings":"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","file":"user-ctrl-compiled.js","sourcesContent":["var express = require('express');\r\nvar users = express.Router();\r\nvar bcrypt = require('bcryptjs');\r\nvar Model = require('../models/user.js');\r\nvar Group = require('../models/group.js');\r\nvar jwt = require('jsonwebtoken');\r\nconst config = require('../app/config.js');\r\n\r\n/**\r\n * Security\r\n */\r\nvar salt = bcrypt.genSaltSync(10);\r\n\r\n\r\n/**\r\n * List of all users\r\n */\r\nusers.get('/', function (req, res) {\r\n    Model.find({}).populate({path: 'group'}).exec(function (err, list) {\r\n        if (err) {\r\n            return res.json(500, {\r\n                message: 'Error getting objects.'\r\n            });\r\n        }\r\n        return res.json(list);\r\n    });\r\n});\r\n\r\n/**\r\n * Create new user\r\n */\r\nusers.post('/', function (req, res) {\r\n    var pwd = req.body.password;\r\n    console.log(req.body);\r\n    console.log('Generating password from password ' + pwd + ' and salt ' + salt);\r\n    // By default: use the group 'user'\r\n    var groupName = req.body.group || 'user';\r\n    Group.findOne({name: groupName}, function (err, group) {\r\n        var user = new Model({\r\n            username: req.body.username,\r\n            password: req.body.password,\r\n            email: req.body.email,\r\n            group: group\r\n        });\r\n        user.save(function (err, user) {\r\n            if (err) {\r\n                return res.status(500).json({\r\n                    message: 'Error when saving',\r\n                    error: err\r\n                });\r\n            }\r\n            return res.json({\r\n                message: 'saved',\r\n                _id: user._id\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n/**\r\n * Update user by username\r\n */\r\nusers.put('/:username', function (req, res) {\r\n    var username = req.params.username;\r\n    Model.findOne({username: username}, function (err, user) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error saving',\r\n                error: err\r\n            });\r\n        }\r\n        else if (!user) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        else {\r\n            user.username = req.body.username ? req.body.username : user.username;\r\n            user.password = req.body.password ? req.body.password : undefined; // Do not modify password if not set\r\n            user.email = req.body.email ? req.body.email : user.email;\r\n            user.group = req.body.group ? req.body.group : user.group;\r\n            user.save(function (err, user) {\r\n                if (err) {\r\n                    return res.status(500).json({\r\n                        message: 'Error saving'\r\n                    });\r\n                }\r\n                else if (!user) {\r\n                    return res.status(404).json({\r\n                        message: 'Not found'\r\n                    });\r\n                }\r\n                else {\r\n                    return res.json(user);\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n/**\r\n * Find user by username\r\n */\r\nusers.get('/:username', function (req, res) {\r\n    var username = req.params.username;\r\n    Model.findOne({username: username}).populate({path: 'group'}).exec(function (err, user) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error when getting object'\r\n            });\r\n        }\r\n        if (!user) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        return res.json(user);\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Delete user by username\r\n */\r\nusers.delete('/:username', function (req, res) {\r\n    var username = req.params.username;\r\n    Model.findOne({username: username}, function (err, user) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error deleting'\r\n            });\r\n        }\r\n        if (!user) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        return res.json(user);\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Login user\r\n */\r\nusers.post('/login', (req, res)=> {\r\n    var username = req.body.username;\r\n    var password = req.body.password;\r\n    var authenticated = false;\r\n\r\n    console.log('Processing login');\r\n    console.log(req.body);\r\n\r\n    // Find user\r\n    Model.findOne({username: username}).populate({path: 'group'}).exec(function (err, user) {\r\n        if (user) {\r\n            // User found\r\n            console.log('Compare password \"' + password + '\" with hash \"' + user.password + '\"');\r\n            authenticated = bcrypt.compareSync(password, user.password);\r\n            if (authenticated) {\r\n                console.log('Login succeeded');\r\n            }\r\n            else {\r\n                console.log('Login failure: password mismatch');\r\n            }\r\n        }\r\n        else {\r\n            console.log('Login failure: no user found with username \"' + username + '\"');\r\n        }\r\n        if (authenticated) {\r\n            var secret = config.get('security:jsonTokenVerificationSecret');\r\n            // create a token\r\n            var token = jwt.sign(user, secret, {\r\n                expiresIn: '24h'\r\n            });\r\n\r\n            // Remove properties before returning user object\r\n            delete user.password;\r\n            delete user._id;\r\n\r\n            return res\r\n                .json({\r\n                    success: true,\r\n                    user: user,\r\n                    token: token\r\n                });\r\n        }\r\n        else {\r\n            return res.status(400).json({\r\n                success: false,\r\n                message: 'Login failure'\r\n            })\r\n                ;\r\n        }\r\n    });\r\n\r\n\r\n})\r\n;\r\n\r\n\r\nmodule.exports = users;"]}