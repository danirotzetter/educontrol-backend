{"version":3,"sources":["course-ctrl.js"],"names":[],"mappings":"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","file":"course-ctrl-compiled.js","sourcesContent":["var express = require('express');\r\nvar courses = express.Router();\r\nvar Model = require('../models/course.js');\r\nvar Exam = require('../models/exam.js');\r\nconst config = require('../app/config.js');\r\n\r\n\r\n/**\r\n * List of all courses\r\n */\r\ncourses.get('/', function (req, res) {\r\n    Model.find({}).populate('exams').exec(function (err, list) {\r\n        if (err) {\r\n            return res.json(500, {\r\n                message: 'Error getting objects.'\r\n            });\r\n        }\r\n        return res.json(list);\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Find user by id\r\n */\r\ncourses.get('/:id', function (req, res) {\r\n    var id = req.params.id;\r\n    Model.findOne({_id: id}).populate({path: 'exams', populate: {path: 'grades'}}).populate('students').exec(function (err, course) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error when getting object'\r\n            });\r\n        }\r\n        if (!course) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        return res.json(course);\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Create new course\r\n */\r\ncourses.post('/', function (req, res) {\r\n    console.log('About to save course');\r\n    var course = new Model({\r\n        name: req.body.name,\r\n        description: req.body.description\r\n    });\r\n    course.save(function (err, course) {\r\n        if (err) {\r\n            console.log('Error saving course ' + err);\r\n            return res.status(500).json({\r\n                message: 'Error when saving',\r\n                error: err\r\n            });\r\n        }\r\n        else {\r\n            console.log('Successfully saved course ' + err);\r\n            return res.json({\r\n                message: 'saved',\r\n                _id: course._id\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n/**\r\n * Update\r\n */\r\ncourses.put('/:id', function (req, res) {\r\n    var id = req.params.id;\r\n    console.log('Update course with id ' + id);\r\n    Model.findByIdAndUpdate({_id: id},\r\n        req.body,\r\n        {upsert: true, new: true},\r\n        function (err, course) {\r\n            if (err) {\r\n                console.log('Err ' + err);\r\n                return res.status(500).json({\r\n                    message: 'Error updating',\r\n                    error: err\r\n                });\r\n            }\r\n            else if (!course) {\r\n                return res.status(404).json({\r\n                    message: 'Not found'\r\n                });\r\n            }\r\n            else {\r\n                console.log('Successfully updated');\r\n                return res.json(course);\r\n            }\r\n        });\r\n});\r\n\r\n\r\n/**\r\n * Delete by id\r\n */\r\ncourses.delete('/:id', function (req, res) {\r\n    var id = req.params.id;\r\n    console.log('About to delete course ' + id);\r\n    Model.findOne({_id: id}, function (err, course) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error finding object'\r\n            });\r\n        }\r\n        if (!course) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        course.remove(function (err) {\r\n            if (err) {\r\n                return res.status(500).json({\r\n                    message: 'Error deleting'\r\n                });\r\n            }\r\n            return res.json({message: 'Successfully deleted object'});\r\n        });\r\n    });\r\n});\r\n\r\n\r\nmodule.exports = courses;"]}