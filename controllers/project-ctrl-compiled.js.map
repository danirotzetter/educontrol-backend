{"version":3,"sources":["project-ctrl.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,WAAW,QAAQ,MAAR,EAAf;AACA,IAAI,QAAQ,QAAQ,sBAAR,CAAZ;AACA,IAAI,WAAW,QAAQ,uBAAR,CAAf;AACA,MAAM,SAAS,QAAQ,kBAAR,CAAf;;AAGA;;;;;AAKA,IAAI,aAAa,QAAQ,MAAR,CAAe,EAAC,aAAY,IAAb,EAAf,CAAjB;AACA,SAAS,GAAT,CAAa,aAAb,EAA4B,UAA5B;AACA;;;AAGA,WAAW,GAAX,CAAe,GAAf,EAAoB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACpC,YAAQ,GAAR,CAAY,mBAAZ;AACA,QAAI,KAAK,IAAI,KAAJ,CAAU,UAAnB;AACA,UAAM,OAAN,CAAc,EAAC,kBAAkB,EAAnB,EAAd,EAAsC,QAAtC,CAA+C,EAAC,MAAM,YAAP,EAAqB,UAAU,EAAC,MAAM,gBAAP,EAA/B,EAA/C,EAAyG,IAAzG,CAA8G,UAAU,GAAV,EAAe,OAAf,EAAwB;AAClI,YAAI,GAAJ,EAAS;AACL,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH;AACD,YAAI,CAAC,OAAL,EAAc;AACV,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH;AACD,eAAO,IAAI,IAAJ,CAAS,OAAT,CAAP;AACH,KAZD;AAaH,CAhBD;AAiBA;;;;;;AAMA;;;AAGA,SAAS,GAAT,CAAa,GAAb,EAAkB,UAAU,GAAV,EAAe,GAAf,EAAoB;AAClC,YAAQ,GAAR,CAAY,kBAAZ;AACA,UAAM,IAAN,CAAW,EAAX,EAAe,QAAf,CAAwB,EAAC,MAAM,YAAP,EAAqB,UAAU,EAAC,MAAM,gBAAP,EAA/B,EAAxB,EAAkF,IAAlF,CAAuF,UAAU,GAAV,EAAe,IAAf,EAAqB;AACxG,YAAI,GAAJ,EAAS;AACL,mBAAO,IAAI,IAAJ,CAAS,GAAT,EAAc;AACjB,yBAAS;AADQ,aAAd,CAAP;AAGH;AACD,eAAO,IAAI,IAAJ,CAAS,IAAT,CAAP;AACH,KAPD;AAQH,CAVD;;AAaA;;;AAGA,SAAS,GAAT,CAAa,MAAb,EAAqB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACrC,YAAQ,GAAR,CAAY,WAAZ;AACA,QAAI,KAAK,IAAI,MAAJ,CAAW,EAApB;AACA,UAAM,OAAN,CAAc,EAAC,KAAK,EAAN,EAAd,EAAyB,QAAzB,CAAkC,EAAC,MAAM,YAAP,EAAqB,UAAU,EAAC,MAAM,gBAAP,EAA/B,EAAlC,EAA4F,IAA5F,CAAiG,UAAU,GAAV,EAAe,OAAf,EAAwB;AACrH,YAAI,GAAJ,EAAS;AACL,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH;AACD,YAAI,CAAC,OAAL,EAAc;AACV,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH;AACD,eAAO,IAAI,IAAJ,CAAS,OAAT,CAAP;AACH,KAZD;AAaH,CAhBD;;AAkBA;;;AAGA,SAAS,IAAT,CAAc,GAAd,EAAmB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACnC,YAAQ,GAAR,CAAY,uBAAZ;AACA,QAAI,UAAU,IAAI,KAAJ,CAAU;AACpB,cAAM,IAAI,IAAJ,CAAS,IADK;AAEpB,qBAAa,IAAI,IAAJ,CAAS;AAFF,KAAV,CAAd;AAIA,YAAQ,IAAR,CAAa,UAAU,GAAV,EAAe,OAAf,EAAwB;AACjC,YAAI,GAAJ,EAAS;AACL,oBAAQ,GAAR,CAAY,0BAA0B,GAAtC;AACA,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS,mBADe;AAExB,uBAAO;AAFiB,aAArB,CAAP;AAIH,SAND,MAOK;AACD,oBAAQ,GAAR,CAAY,gCAAgC,GAA5C;AACA,mBAAO,IAAI,IAAJ,CAAS;AACZ,yBAAS,OADG;AAEZ,qBAAK,QAAQ;AAFD,aAAT,CAAP;AAIH;AACJ,KAfD;AAgBH,CAtBD;;AAwBA;;;AAGA,SAAS,GAAT,CAAa,MAAb,EAAqB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACrC,QAAI,KAAK,IAAI,MAAJ,CAAW,EAApB;AACA,YAAQ,GAAR,CAAY,4BAA4B,EAAxC;AACA,UAAM,iBAAN,CAAwB,EAAC,KAAK,EAAN,EAAxB,EACI,IAAI,IADR,EAEI,EAAC,QAAQ,IAAT,EAAe,MAAM,IAArB,EAFJ,EAGI,UAAU,GAAV,EAAe,OAAf,EAAwB;AACpB,YAAI,GAAJ,EAAS;AACL,oBAAQ,GAAR,CAAY,SAAS,GAArB;AACA,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS,gBADe;AAExB,uBAAO;AAFiB,aAArB,CAAP;AAIH,SAND,MAOK,IAAI,CAAC,OAAL,EAAc;AACf,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH,SAJI,MAKA;AACD,oBAAQ,GAAR,CAAY,sBAAZ;AACA,mBAAO,IAAI,IAAJ,CAAS,IAAI,IAAb,CAAP;AACH;AACJ,KApBL;AAqBH,CAxBD;;AA2BA;;;AAGA,SAAS,MAAT,CAAgB,MAAhB,EAAwB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACxC,QAAI,KAAK,IAAI,MAAJ,CAAW,EAApB;AACA,YAAQ,GAAR,CAAY,6BAA6B,EAAzC;AACA,UAAM,OAAN,CAAc,EAAC,KAAK,EAAN,EAAd,EAAyB,UAAU,GAAV,EAAe,OAAf,EAAwB;AAC7C,YAAI,GAAJ,EAAS;AACL,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH;AACD,YAAI,CAAC,OAAL,EAAc;AACV,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,yBAAS;AADe,aAArB,CAAP;AAGH;AACD,gBAAQ,MAAR,CAAe,UAAU,GAAV,EAAe;AAC1B,gBAAI,GAAJ,EAAS;AACL,uBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACxB,6BAAS;AADe,iBAArB,CAAP;AAGH;AACD,mBAAO,IAAI,IAAJ,CAAS,EAAC,SAAS,6BAAV,EAAT,CAAP;AACH,SAPD;AAQH,KAnBD;AAoBH,CAvBD;;AA4BA,OAAO,OAAP,GAAiB,QAAjB","file":"project-ctrl-compiled.js","sourcesContent":["var express = require('express');\r\nvar projects = express.Router();\r\nvar Model = require('../models/project.js');\r\nvar Activity = require('../models/activity.js');\r\nconst config = require('../app/config.js');\r\n\r\n\r\n/**\r\n * ===============\r\n * START-ROUTING\r\n * ===============\r\n */\r\nvar byActivity = express.Router({mergeParams:true});\r\nprojects.use('/byActivity', byActivity);\r\n/**\r\n * Find by activityId\r\n */\r\nbyActivity.get('/', function (req, res) {\r\n    console.log('Get by activityId');\r\n    var id = req.query.activityId;\r\n    Model.findOne({'activities._id': id}).populate({path: 'activities', populate: {path: 'values metrics'}}).exec(function (err, project) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error when getting object'\r\n            });\r\n        }\r\n        if (!project) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        return res.json(project);\r\n    });\r\n});\r\n/**\r\n * ===============\r\n * END-ROUTING\r\n * ===============\r\n */\r\n\r\n/**\r\n * List of all projects\r\n */\r\nprojects.get('/', function (req, res) {\r\n    console.log('Get all projects');\r\n    Model.find({}).populate({path: 'activities', populate: {path: 'values metrics'}}).exec(function (err, list) {\r\n        if (err) {\r\n            return res.json(500, {\r\n                message: 'Error getting objects.'\r\n            });\r\n        }\r\n        return res.json(list);\r\n    });\r\n});\r\n\r\n\r\n/**\r\n * Find by id\r\n */\r\nprojects.get('/:id', function (req, res) {\r\n    console.log('Get by id');\r\n    var id = req.params.id;\r\n    Model.findOne({_id: id}).populate({path: 'activities', populate: {path: 'values metrics'}}).exec(function (err, project) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error when getting object'\r\n            });\r\n        }\r\n        if (!project) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        return res.json(project);\r\n    });\r\n});\r\n\r\n/**\r\n * Create new project\r\n */\r\nprojects.post('/', function (req, res) {\r\n    console.log('About to save project');\r\n    var project = new Model({\r\n        name: req.body.name,\r\n        description: req.body.description\r\n    });\r\n    project.save(function (err, project) {\r\n        if (err) {\r\n            console.log('Error saving project ' + err);\r\n            return res.status(500).json({\r\n                message: 'Error when saving',\r\n                error: err\r\n            });\r\n        }\r\n        else {\r\n            console.log('Successfully saved project ' + err);\r\n            return res.json({\r\n                message: 'saved',\r\n                _id: project._id\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n/**\r\n * Update\r\n */\r\nprojects.put('/:id', function (req, res) {\r\n    var id = req.params.id;\r\n    console.log('Update project with id ' + id);\r\n    Model.findByIdAndUpdate({_id: id},\r\n        req.body,\r\n        {upsert: true, safe: true},\r\n        function (err, project) {\r\n            if (err) {\r\n                console.log('Err ' + err);\r\n                return res.status(500).json({\r\n                    message: 'Error updating',\r\n                    error: err\r\n                });\r\n            }\r\n            else if (!project) {\r\n                return res.status(404).json({\r\n                    message: 'Not found'\r\n                });\r\n            }\r\n            else {\r\n                console.log('Successfully updated');\r\n                return res.json(req.body);\r\n            }\r\n        });\r\n});\r\n\r\n\r\n/**\r\n * Delete by id\r\n */\r\nprojects.delete('/:id', function (req, res) {\r\n    var id = req.params.id;\r\n    console.log('About to delete project ' + id);\r\n    Model.findOne({_id: id}, function (err, project) {\r\n        if (err) {\r\n            return res.status(500).json({\r\n                message: 'Error finding object'\r\n            });\r\n        }\r\n        if (!project) {\r\n            return res.status(404).json({\r\n                message: 'Not found'\r\n            });\r\n        }\r\n        project.remove(function (err) {\r\n            if (err) {\r\n                return res.status(500).json({\r\n                    message: 'Error deleting'\r\n                });\r\n            }\r\n            return res.json({message: 'Successfully deleted object'});\r\n        });\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\nmodule.exports = projects;"]}