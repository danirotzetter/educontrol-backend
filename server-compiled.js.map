{"version":3,"sources":["server.js"],"names":[],"mappings":";;;AAGA,MAAM,UAAU,QAAQ,SAAR,CAAhB;AACA,MAAM,aAAa,QAAQ,aAAR,CAAnB;AACA,MAAM,WAAW,QAAQ,UAAR,CAAjB,C;AACA,MAAM,OAAO,QAAQ,MAAR,CAAb,C;AACA,MAAM,SAAS,QAAQ,iBAAR,CAAf,C;AACA,MAAM,MAAM,SAAZ;AACA,MAAM,SAAS,QAAQ,MAAR,EAAf,C;;AAGA,QAAQ,GAAR,CAAY,qCAAqC,OAAO,GAAP,CAAW,KAAX,CAArC,GAAyD,GAArE;;;;;AAKA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAC,UAAU,IAAX,EAAtB,CAAR,E;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;;;;;AAMA,IAAI,WAAU,QAAQ,4BAAR,CAAd;;;;;AAKA,OAAO,GAAP,CAAW,GAAX,EAAgB,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC/B,MAAI,IAAJ,CAAS,EAAE,SAAS,wBAAX,EAAT;AACH,CAFD;;AAIA,IAAI,GAAJ,CAAQ,GAAR,EAAa,MAAb;AACA,IAAI,GAAJ,CAAQ,QAAR,EAAkB,QAAlB;;;;;;;;AASA,IAAI,aAAa,eAAe,OAAO,GAAP,CAAW,aAAX,CAAf,GAA2C,GAA3C,GAAiD,OAAO,GAAP,CAAW,aAAX,CAAjD,GAA6E,GAA7E,GAAmF,OAAO,GAAP,CAAW,SAAX,CAAnF,GAA2G,GAA3G,GAAiH,OAAO,GAAP,CAAW,SAAX,CAAjH,GAAyI,GAAzI,GAA+I,OAAO,GAAP,CAAW,aAAX,CAAhK;AACA,QAAQ,GAAR,CAAY,2BAA2B,UAAvC;AACA,SAAS,OAAT,CAAiB,UAAjB,EAA6B,CAAC,GAAD,EAAM,QAAN,KAAmB;;AAE5C,MAAI,GAAJ,EAAQ;AACJ,YAAQ,GAAR,CAAY,iCAA+B,GAA3C;AACH,GAFD,MAGI;AACA,YAAQ,GAAR,CAAY,oCAAZ;AACH;;;AAGD,MAAI,MAAJ,CAAW,OAAO,GAAP,CAAW,UAAX,CAAX,EAAmC,MAAK;AACpC,YAAQ,GAAR,CAAY,uBAAuB,OAAO,GAAP,CAAW,UAAX,CAAnC;AACH,GAFD;AAGH,CAbD","file":"server-compiled.js","sourcesContent":["/**\r\n * Require libraries\r\n */\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst mongoose = require('mongoose'); // To simplify dealing with mongodb\r\nconst http = require('http'); // For base http operations\r\nconst config = require('./app/config.js'); // Loads the configuration\r\nconst app = express();\r\nconst router = express.Router(); // get an instance of the express Router\r\n\r\n\r\nconsole.log('Starting server in environment \"' + config.get('env') + '\"');\r\n\r\n/**\r\n * Configure the application\r\n */\r\napp.use(bodyParser.urlencoded({extended: true})); // Simplified body reading: adds <form> element data to the body\r\napp.use(bodyParser.json());\r\n\r\n\r\n/**\r\n * Load controllers\r\n  */\r\nvar userCtrl= require('./controllers/user-ctrl.js');\r\n\r\n/**\r\n * START ROUTES\r\n */\r\nrouter.get('/', function(req, res) {\r\n    res.json({ message: 'Please use an api call' });\r\n});\r\n// REGISTER OUR ROUTES -------------------------------\r\napp.use('/', router);\r\napp.use('/users', userCtrl);\r\n/**\r\n * END ROUTES\r\n */\r\n\r\n\r\n/**\r\n * Launch the application if connection to MongoDB is successful\r\n */\r\nvar mongoDbUrl = 'mongodb://' + config.get('db:username') + ':' + config.get('db:password') + '@' + config.get('db:host') + ':' + config.get('db:port') + '/' + config.get('db:database');\r\nconsole.log('Attempt to connect to ' + mongoDbUrl);\r\nmongoose.connect(mongoDbUrl, (err, database) => {\r\n    // ... start the server\r\n    if (err){\r\n        console.log('Cannot connect to database: '+err);\r\n    }\r\n    else{\r\n        console.log('Successfully connected to database');\r\n    }\r\n\r\n    // Start listening\r\n    app.listen(config.get('app:port'), ()=> {\r\n        console.log('listening on port ' + config.get('app:port'))\r\n    });\r\n})\r\n;\r\n\r\n\r\n\r\n"]}